{"version":3,"sources":["components/Square.js","components/Board.js","components/App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","sign","String","fromCharCode","Board","generateSquare","i","state","board","handleClick","started","current","setState","prevState","n","winnerFound","foundWinner","finished","hCheck","lower","upper","cnt","vCheck","dCheck","0","2","limits","hLimits","wonH","findOut","vLimits","wonV","wonRD","wonLD","dLimits","hasOwnProperty","limit","start","pValue","prompt","toUpperCase","document","addEventListener","e","keyCode","startKeyCode","this","type","value","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de45a3c9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport '../styles/Square.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n\r\n        <span className=\"square\" onClick={props.onClick}>\r\n            {props.sign ? props.sign : String.fromCharCode(160)}\r\n        </span>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Square;","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nimport '../styles/Board.css';\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            board: [\r\n                null, null, null,\r\n                null, null, null,\r\n                null, null, null\r\n            ],\r\n            n: 0,\r\n            current: '',\r\n            started: false,\r\n            finished: false,\r\n            winnerFound: false\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            //  Numbers above the alphabets  ||       The Numpad \r\n            if (e.keyCode >= 49 && e.keyCode <= 57 || e.keyCode >= 97 && e.keyCode <= 105) {\r\n                const startKeyCode = e.keyCode < 97 ? 48 : 96;\r\n                this.handleClick(e.keyCode - startKeyCode - 1);\r\n            } else if (e.keyCode === 83) {\r\n                this.start();\r\n            }\r\n\r\n            return;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    generateSquare = (i) => {\r\n        return <Square sign={this.state.board[i]} onClick={() => this.handleClick(i)} />\r\n    }\r\n\r\n\r\n    handleClick = (i) => {\r\n\r\n        if (this.state.started && this.state.board[i] === null) {\r\n            const board = [...this.state.board];\r\n            board[i] = this.state.current;\r\n    \r\n            this.setState(prevState => ({\r\n                board: board,\r\n                n: prevState.n + 1\r\n            }), () => {\r\n\r\n                let winnerFound = false;\r\n\r\n                if ((winnerFound = this.foundWinner(i)) || this.state.n === 9) {\r\n\r\n                    this.setState({\r\n                        winnerFound,\r\n                        finished: true,\r\n                        started: false\r\n                    });\r\n\r\n                } else {\r\n                    this.setState(prevState => ({\r\n                        current: prevState.current === 'X' ? 'O' : 'X',\r\n                    }));\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    hCheck = (i) => {\r\n\r\n        let lower = null;\r\n        let upper = null;\r\n        const cnt = 1;\r\n\r\n        if (i >= 0 && i <= 2) {\r\n            lower = 0;\r\n            upper = 2;\r\n        } else if (i >= 3 && i <= 5) {\r\n            lower = 3;\r\n            upper = 5;\r\n        } else if (i >= 6 && i <= 8) {\r\n            lower = 6;\r\n            upper = 8;\r\n        }\r\n\r\n\r\n        return {\r\n            lower,\r\n            upper,\r\n            cnt\r\n        };\r\n\r\n    }\r\n\r\n    vCheck = (i) => {\r\n        \r\n        let lower = null;\r\n        let upper = null;\r\n        const cnt = 3;\r\n\r\n        if (i >= 0 && i <= 2) {\r\n            lower = i;\r\n            upper = i + 6;\r\n        } else if (i >= 3 && i <= 5) {\r\n            lower = i - 3;\r\n            upper = i + 3;\r\n        } else if (i >= 6 && i <= 8) {\r\n            lower = i - 6;\r\n            upper = i;\r\n        }\r\n\r\n\r\n        return {\r\n            lower,\r\n            upper,\r\n            cnt\r\n        };\r\n\r\n    }\r\n\r\n    dCheck = (i) => {\r\n\r\n        let lower = null;\r\n        let upper = null;\r\n        let cnt = 3;\r\n    \r\n        if (i === 0 || i === 8) {\r\n            lower = 0;\r\n            upper = 8;\r\n            cnt = 4;\r\n\r\n            return {\r\n                0: {\r\n                    lower,\r\n                    upper,\r\n                    cnt\r\n                }\r\n            };\r\n\r\n        } else if (i === 2 || i === 6) {\r\n            lower = 2;\r\n            upper = 6;\r\n            cnt = 2;\r\n\r\n            return {\r\n                2: {\r\n                    lower,\r\n                    upper,\r\n                    cnt\r\n                }\r\n            };\r\n\r\n        } else {\r\n\r\n            // right diagonal\r\n            lower = 0;\r\n            upper = 8;\r\n            cnt = 4;\r\n\r\n            const limits =  {\r\n                0: {\r\n                    lower,\r\n                    upper,\r\n                    cnt\r\n                }\r\n            };\r\n\r\n\r\n            // left diagonal\r\n            lower = 2;\r\n            upper = 6;\r\n            cnt = 2;\r\n\r\n            limits[2] = {\r\n                lower,\r\n                upper,\r\n                cnt\r\n            }\r\n\r\n            return limits;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    foundWinner = (i) => {\r\n\r\n        const hLimits = this.hCheck(i);\r\n        const wonH = this.findOut(hLimits);\r\n\r\n        const vLimits = this.vCheck(i);\r\n        const wonV = this.findOut(vLimits);\r\n\r\n\r\n\r\n        // check right diagonal\r\n        let wonRD = false;\r\n\r\n        \r\n        // check right diagonal\r\n        let wonLD = false;\r\n\r\n\r\n        if (i % 2 === 0) {\r\n\r\n            const dLimits = this.dCheck(i);\r\n\r\n            \r\n            if (dLimits.hasOwnProperty('0')) {\r\n                wonRD = this.findOut(dLimits[0]);\r\n            }\r\n\r\n\r\n            if (dLimits.hasOwnProperty('2')) {\r\n                wonLD = this.findOut(dLimits[2]);\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n        return wonH || wonV || wonRD || wonLD;\r\n\r\n    }\r\n\r\n\r\n    findOut = (limit) => {\r\n\r\n        for (let i = limit.lower; i <= limit.upper; i += limit.cnt) {\r\n            if (this.state.board[i] !== this.state.current) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    start = () => {\r\n        let pValue = prompt(\"Enter either X/O\");\r\n        pValue = pValue ? pValue.toUpperCase() : \"\";\r\n\r\n        if (pValue === \"X\" || pValue === \"O\") {\r\n            this.setState({\r\n                board: [\r\n                    null, null, null,\r\n                    null, null, null,\r\n                    null, null, null\r\n                ],\r\n                n: 0,\r\n                started: true,\r\n                current: pValue,\r\n                finished: false,\r\n                winnerFound: false\r\n            });\r\n        }\r\n            \r\n           \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"board-with-controls\">\r\n                <div className=\"board\">\r\n                    <div className=\"squares\">\r\n                        {this.generateSquare(0)}\r\n                        {this.generateSquare(1)}\r\n                        {this.generateSquare(2)}\r\n                    </div>\r\n\r\n                    <div className=\"squares\">\r\n                        {this.generateSquare(3)}\r\n                        {this.generateSquare(4)}\r\n                        {this.generateSquare(5)}\r\n                    </div>\r\n\r\n                    <div className=\"squares\">\r\n                        {this.generateSquare(6)}\r\n                        {this.generateSquare(7)}\r\n                        {this.generateSquare(8)}\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.winnerFound ?\r\n\r\n                    <h1>The Winner is: {this.state.current} </h1>\r\n\r\n                    :\r\n\r\n                    ''\r\n                }\r\n\r\n                <input type=\"button\" value={!this.state.started || this.state.finished ? \"Start\" : \"Reset\"} onClick={this.start} className=\"btn btn-primary\" />\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Board;","import '../styles/App.css';\n\nimport Board from './Board';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Board />  \n      <h3>\n        You can use the following keyboard shortcuts\n        \n        <ul>\n          <li>\"s\" to start/reset the game</li>\n          <li>\"0-9\" to play the moves</li>\n        </ul>\n      </h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}