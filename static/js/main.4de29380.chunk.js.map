{"version":3,"sources":["components/Square.js","components/Board.js","components/App.js","reportWebVitals.js","index.js"],"names":["Square","props","className","onClick","sign","String","fromCharCode","Board","generateSquare","i","state","board","handleClick","started","current","setState","prevState","n","winObj","foundWinner","winnerFound","finished","line","limits","hCheck","lower","upper","y","cnt","x","width","angle","isHorizontal","vCheck","indexOf","dCheck","0","2","hLimits","wonH","findOut","vLimits","wonV","wonRD","wonLD","dLimits","hasOwnProperty","winTypes","structureWinObj","limit","start","pValue","prompt","toUpperCase","document","addEventListener","e","keyCode","startKeyCode","rDLimits","lDLimits","style","display","this","transform","transformOrigin","top","type","value","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4de29380.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport '../styles/Square.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n\r\n        <span className=\"square\" onClick={props.onClick}>\r\n            {props.sign ? props.sign : String.fromCharCode(160)}\r\n        </span>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Square;","import React, { Component } from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nimport '../styles/Board.css';\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            board: [\r\n                null, null, null,\r\n                null, null, null,\r\n                null, null, null\r\n            ],\r\n            n: 0,\r\n            current: '',\r\n            started: false,\r\n            finished: false,\r\n            winnerFound: false,\r\n\r\n            line: {\r\n                x: 0,\r\n                y: 0,\r\n\r\n                width: 0,\r\n\r\n                angle: 0,\r\n                isHorizontal: false\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        document.addEventListener(\"keydown\", (e) => {\r\n            //  Numbers above the alphabets  ||       The Numpad \r\n            if (e.keyCode >= 49 && e.keyCode <= 57 || e.keyCode >= 97 && e.keyCode <= 105) {\r\n                const startKeyCode = e.keyCode < 97 ? 48 : 96;\r\n                this.handleClick(e.keyCode - startKeyCode - 1);\r\n            } else if (e.keyCode === 83) {\r\n                this.start();\r\n            }\r\n\r\n            return;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    generateSquare = (i) => {\r\n        return <Square sign={this.state.board[i]} onClick={() => this.handleClick(i)} />\r\n    }\r\n\r\n\r\n    handleClick = (i) => {\r\n\r\n        if (this.state.started && this.state.board[i] === null) {\r\n            const board = [...this.state.board];\r\n            board[i] = this.state.current;\r\n    \r\n            this.setState(prevState => ({\r\n                board: board,\r\n                n: prevState.n + 1\r\n            }), () => {\r\n\r\n                let winObj = {};\r\n\r\n                if ((winObj = this.foundWinner(i)).foundWinner || this.state.n === 9) {\r\n\r\n                    this.setState(state => ({\r\n                        winnerFound: winObj.foundWinner,\r\n                        finished: true,\r\n                        started: false,\r\n\r\n                        line: winObj.foundWinner ? winObj.limits : state.line\r\n                    }));\r\n\r\n                } else {\r\n                    this.setState(prevState => ({\r\n                        current: prevState.current === 'X' ? 'O' : 'X',\r\n                    }));\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    hCheck = (i) => {\r\n\r\n        let lower = null;\r\n        let upper = null;\r\n        const cnt = 1;\r\n\r\n        let y = 0;\r\n\r\n        if (i >= 0 && i <= 2) {\r\n            lower = 0;\r\n            upper = 2;\r\n\r\n            y = 44;\r\n        } else if (i >= 3 && i <= 5) {\r\n            lower = 3;\r\n            upper = 5;\r\n\r\n            y = 103;\r\n        } else if (i >= 6 && i <= 8) {\r\n            lower = 6;\r\n            upper = 8;\r\n\r\n\r\n            y = 161;\r\n        }\r\n\r\n\r\n        return {\r\n            lower,\r\n            upper,\r\n            cnt,\r\n\r\n            line: {\r\n                x: 0,\r\n                y,\r\n\r\n                width: 0,\r\n\r\n                angle: 0,\r\n\r\n                isHorizontal: true\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    vCheck = (i) => {\r\n        \r\n        let lower = null;\r\n        let upper = null;\r\n        const cnt = 3;\r\n        \r\n\r\n        const angle = 90;\r\n        let x = 0;\r\n        let y = 0;\r\n        const width = 190;\r\n\r\n        if (i >= 0 && i <= 2) {\r\n            lower = i;\r\n            upper = i + 6;\r\n\r\n        } else if (i >= 3 && i <= 5) {\r\n            lower = i - 3;\r\n            upper = i + 3;\r\n\r\n\r\n        } else if (i >= 6 && i <= 8) {\r\n            lower = i - 6;\r\n            upper = i;\r\n\r\n        }\r\n\r\n\r\n        // set the x & y\r\n        if ([0, 3, 6].indexOf(i) !== -1) {\r\n\r\n            x = 17;\r\n            y = 16;\r\n\r\n        } else if ([1, 4, 7].indexOf(i) !== -1) {\r\n\r\n            x = 50;\r\n            y = 52;\r\n\r\n        } else if ([2, 5, 8].indexOf(i) !== -1) {\r\n\r\n            \r\n            x = 87;\r\n            y = 85;\r\n            \r\n        }\r\n\r\n\r\n\r\n        return {\r\n            lower,\r\n            upper,\r\n            cnt,\r\n\r\n            line: {\r\n                x,\r\n                y,\r\n                width,\r\n                angle,\r\n\r\n                isHorizontal: false\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    dCheck = (i) => {\r\n\r\n        let lower = null;\r\n        let upper = null;\r\n        let cnt = 3;\r\n\r\n    \r\n        if (i === 0 || i === 8) {\r\n            lower = 0;\r\n            upper = 8;\r\n            cnt = 4;\r\n\r\n            return {\r\n                0: {\r\n                    lower,\r\n                    upper,\r\n                    cnt,\r\n\r\n                    line: {\r\n                        x: -3,\r\n                        y: -19,\r\n                        width: 307,\r\n                        angle: 40,\r\n        \r\n                        isHorizontal: false\r\n                    }\r\n                }\r\n            };\r\n\r\n        } else if (i === 2 || i === 6) {\r\n            lower = 2;\r\n            upper = 6;\r\n            cnt = 2;\r\n\r\n            return {\r\n                2: {\r\n                    lower,\r\n                    upper,\r\n                    cnt,\r\n\r\n                    line: {\r\n                        x: 259,\r\n                        y: 120,\r\n                        width: 307,\r\n                        angle: -40,\r\n        \r\n                        isHorizontal: false\r\n                    }\r\n                }\r\n            };\r\n\r\n        } else {\r\n\r\n            // right diagonal\r\n            lower = 0;\r\n            upper = 8;\r\n            cnt = 4;\r\n\r\n            const limits =  {\r\n                0: {\r\n                    lower,\r\n                    upper,\r\n                    cnt,\r\n\r\n                    line: {\r\n                        x: -3,\r\n                        y: -19,\r\n                        width: 307,\r\n                        angle: 40,\r\n        \r\n                        isHorizontal: false\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n            // left diagonal\r\n            lower = 2;\r\n            upper = 6;\r\n            cnt = 2;\r\n\r\n            limits[2] = {\r\n                lower,\r\n                upper,\r\n                cnt,\r\n\r\n                line: {\r\n                    x: 259,\r\n                    y: 120,\r\n                    width: 307,\r\n                    angle: -40,\r\n    \r\n                    isHorizontal: false\r\n                }\r\n            }\r\n\r\n            return limits;\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n    foundWinner = (i) => {\r\n\r\n        const hLimits = this.hCheck(i);\r\n        const wonH = this.findOut(hLimits);\r\n\r\n        const vLimits = this.vCheck(i);\r\n        const wonV = this.findOut(vLimits);\r\n\r\n\r\n\r\n        // check right diagonal\r\n        let wonRD = false;\r\n\r\n        \r\n        // check right diagonal\r\n        let wonLD = false;\r\n\r\n\r\n        let dLimits = null;\r\n\r\n\r\n        const limits = {\r\n            hLimits: hLimits.line,\r\n            vLimits: vLimits.line\r\n        }\r\n\r\n\r\n        if (i % 2 === 0) {\r\n\r\n            dLimits = this.dCheck(i);\r\n\r\n            \r\n            if (dLimits.hasOwnProperty('0')) {\r\n                wonRD = this.findOut(dLimits[0]);\r\n\r\n                limits['rDLimits'] = dLimits[0].line;\r\n            }\r\n\r\n\r\n            if (dLimits.hasOwnProperty('2')) {\r\n                wonLD = this.findOut(dLimits[2]);\r\n\r\n                limits['lDLimits'] = dLimits[2].line;\r\n            }\r\n\r\n\r\n        }\r\n\r\n        \r\n\r\n        const winTypes = {\r\n            wonH,\r\n            wonV,\r\n\r\n            wonLD,\r\n            wonRD\r\n        }\r\n\r\n\r\n        return this.structureWinObj(winTypes, limits);\r\n\r\n    }\r\n\r\n\r\n    structureWinObj(winTypes, limits) {\r\n\r\n        const winObj = {\r\n            foundWinner: winTypes.wonH || winTypes.wonV || winTypes.wonRD || winTypes.wonLD\r\n        }\r\n\r\n        if (winTypes.wonH) {\r\n\r\n            winObj['limits'] = limits.hLimits\r\n\r\n        } else if (winTypes.wonV) {\r\n\r\n            winObj['limits'] = limits.vLimits\r\n\r\n        } else if (winTypes.wonRD) {\r\n\r\n            winObj['limits'] = limits.rDLimits\r\n\r\n        } else if (winTypes.wonLD) {\r\n\r\n            winObj['limits'] = limits.lDLimits\r\n\r\n        } \r\n\r\n\r\n        return winObj;\r\n\r\n    }\r\n\r\n\r\n    findOut = (limit) => {\r\n\r\n        for (let i = limit.lower; i <= limit.upper; i += limit.cnt) {\r\n            if (this.state.board[i] !== this.state.current) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    start = () => {\r\n        let pValue = prompt(\"Enter either X/O\");\r\n        pValue = pValue ? pValue.toUpperCase() : \"\";\r\n\r\n        if (pValue === \"X\" || pValue === \"O\") {\r\n            this.setState({\r\n                board: [\r\n                    null, null, null,\r\n                    null, null, null,\r\n                    null, null, null\r\n                ],\r\n                n: 0,\r\n                started: true,\r\n                current: pValue,\r\n                finished: false,\r\n                winnerFound: false,\r\n\r\n                line: {\r\n                    x: 0,\r\n                    y: 0,\r\n    \r\n                    width: 0,\r\n    \r\n                    angle: 0,\r\n                    isHorizontal: false\r\n                }\r\n            });\r\n        }\r\n            \r\n           \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"board-with-controls\">\r\n                <div className=\"board\">\r\n                    \r\n                    <div className=\"non-horizontal-line\" style={\r\n                        {\r\n                            display: this.state.winnerFound && !this.state.line.isHorizontal ? 'inline-block' : 'none',\r\n                            transform: `rotate(${this.state.line.angle}deg)`,\r\n                            transformOrigin: `${this.state.line.x}px ${this.state.line.y}px`,\r\n                            width: `${this.state.line.width}px`\r\n                        }\r\n                    }></div>\r\n                    <div className=\"horizontal-line\" style={\r\n                        { \r\n                            display: this.state.winnerFound && this.state.line.isHorizontal ? 'inline-block' : 'none',\r\n                            top: `${this.state.line.y}px`\r\n                        }\r\n                    }></div>\r\n\r\n\r\n                    <div className=\"squares\">\r\n                        {this.generateSquare(0)}\r\n                        {this.generateSquare(1)}\r\n                        {this.generateSquare(2)}\r\n                    </div>\r\n\r\n                    <div className=\"squares\">\r\n                        {this.generateSquare(3)}\r\n                        {this.generateSquare(4)}\r\n                        {this.generateSquare(5)}\r\n                    </div>\r\n\r\n                    <div className=\"squares\">\r\n                        {this.generateSquare(6)}\r\n                        {this.generateSquare(7)}\r\n                        {this.generateSquare(8)}\r\n                    </div>\r\n                </div>\r\n\r\n                {\r\n                    this.state.winnerFound ?\r\n\r\n                    <h1>The Winner is: {this.state.current} </h1>\r\n\r\n                    :\r\n\r\n                    ''\r\n                }\r\n\r\n                <input type=\"button\" value={!this.state.started || this.state.finished ? \"Start\" : \"Reset\"} onClick={this.start} className=\"btn btn-primary\" />\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Board;","import '../styles/App.css';\n\nimport Board from './Board';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Board />  \n      <h3>\n        You can use the following keyboard shortcuts\n        \n        <ul>\n          <li>\"s\" to start/reset the game</li>\n          <li>\"0-9\" to play the moves</li>\n        </ul>\n      </h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}